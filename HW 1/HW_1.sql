/*     Урок 1. 
Установка СУБД, подключение к БД, 
просмотр и создание таблиц 
*/

-- 1.  Создайте таблицу с мобильными телефонами, используя графический интерфейс. 
--     Заполните БД данными
CREATE DATABASE IF NOT EXISTS home_work_1;
USE home_work_1;
DROP TABLE IF EXISTS phone;
CREATE TABLE phone
(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    Product_Name VARCHAR(20),
    Manufacturer VARCHAR(20),
    Product_Count INT,
    Price INT
);

INSERT phone(Product_Name, Manufacturer, Product_Count, Price)
VALUE
	('iPhone X', 'Apple', 3, 76000),
    ('iPhone 8', 'Apple', 2, 51000),
    ('Galaxy S9', 'Samsung', 2, 56000),
    ('Galaxy S8', 'Samsung', 1, 41000),
    ('P20 Pro', 'Huawei', 5, 36000);

    
    
-- 2.  Выведите название, производителя и цену для товаров, 
--     количество которых превышает 2
SELECT Product_Name, Manufacturer, Price
FROM phone
WHERE Product_Count > 2;



-- 3.  Выведите весь ассортимент товаров марки “Samsung”
SELECT Product_Name, Product_Count, Price
FROM phone
WHERE Manufacturer = 'Samsung';



-- 4.  Выведите информацию о телефонах, 
--     где суммарный чек больше 100 000 и меньше 145 000**
SELECT Product_Name, Manufacturer, Product_Count, Price
FROM phone
WHERE Product_count * Price > 100000 AND Product_count * Price < 145000;




/* 
4.*** С помощью регулярных выражений найти 
      (можно использовать операторы “LIKE”, “RLIKE” для 4.3 ):
*/


-- 4.1  Товары, в которых есть упоминание "Iphone"
SELECT Product_Name, Manufacturer, Product_Count, Price
FROM phone
WHERE Product_Name LIKE 'iPhone%';


-- 4.2  "Galaxy"
SELECT Product_Name, Manufacturer, Product_Count, Price
FROM phone
WHERE Product_Name LIKE 'Galaxy%';


-- 4.3  Товары, в которых есть ЦИФРЫ
SELECT Product_Name, Manufacturer, Product_Count, Price
FROM phone
-- \d	Соответствует цифровому символу.
WHERE Product_Name RLIKE '\\\d';


-- 4.4  Товары, в которых есть ЦИФРА "8"
SELECT Product_Name, Manufacturer, Product_Count, Price
FROM phone
WHERE Product_Name RLIKE '8';


/*
^	Соответствует началу строки. Если используется с match_parameter, равным 'm', он соответствует началу строки в любом месте expression.
$	Соответствует концу строки. Если используется с match_parameter, равным 'm', он совпадает с концом строки в любом месте внутри expression.
*	Совпадает с нулем или более вхождений.
+	Соответствует одному или нескольким вхождениям.
?	Соответствует нулю или одному вхождению.
.	Соответствует любому символу, кроме NULL.
|	Используется как OR указать более одной альтернативы.
[ ]	Используется для указания списка совпадений, в котором вы пытаетесь сопоставить любой из символов в списке.
[^ ]	Используется для указания несоответствующего списка, в котором вы пытаетесь сопоставить любой символ, кроме тех, что в списке.
( )	Используется для группировки выражений как подвыражения.
{m}	Соответствует m раз.
{m,}	Совпадает не менее m раз.
{m,n}	Соответствует не менее m раз, но не более n раз.
\n	n - это число от 1 до 9. Соответствует n-му подвыражению, найденному в () перед тем, как встретить \n.
[..]	Соответствует одному элементу сопоставления, который может содержать более одного символа.
[::]	Соответствует классу символов.
[==]	Соответствует классу эквивалентности.
\d	Соответствует цифровому символу.
\D	Соответствует нецифровому символу.
\w	Соответствует буквенному символу.
\W	Соответствует небуквенному символу.
\s	Соответствует пробелу.
\S	Соответствует непробельному символу.
*?	Соответствует предыдущему шаблону ноль или более вхождений.
+?	Соответствует предыдущему шаблону одному или нескольким вхождениям.
??	Соответствует предыдущему шаблону ноль или одно вхождение.
{n}?	Соответствует предыдущему шаблону n раз.
{n,}?	Соответствует предыдущему шаблону не менее n раз.
{n,m}?	Соответствует предыдущему шаблону не менее n раз, но не более m раз.
*/